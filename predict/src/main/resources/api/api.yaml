openapi: 3.0.3
info:
  title: Hellena API
  description: Service for retrieval disounts info from local stores
  version: 0.0.1
servers:
  - url: https://localhost:8080/v1
    description: Local server
  - url: https://mysterious-dusk-84277.herokuapp.com/v1
    description: Main (production) server
tags:
  - name: "init"
paths:
  /item/new:
    summary: Inset new item
    description: Insert new item with its image
    post:
      operationId: createItem
      requestBody:
        content:
          application/json:
            schema:
              type: object
              $ref: '#/components/schemas/itemInsertDto'
      responses:
        '201':
          description: Created
  /item/all:
    summary: Item endpoint
    description: Place that holds all item operations
    get:
      tags:
        - get
      summary: Return a list of items
      operationId: getItems
      responses:
        '200':
          description: A JSON array of items
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/itemDto'
  /item/search:
    summary: Item search endpoint
    description: Search items include paggination and sort support
    post:
      operationId: searchItems
      requestBody:
        content:
          application/json:
            schema:
              type: object
              $ref: '#/components/schemas/searchItemDto'
      responses:
        '200':
          description: A JSON array of items
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/pageItemDto'
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
                default: '*'
  /item/category/all:
    get:
      summary: Return list of item's categories
      operationId: getCategories
      responses:
        '200':
          description: A JSON arry of categories
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/categoryDto'
  /item/city/all:
    get:
      summary: Return list of store cityes
      operationId: getCities
      responses:
        '200':
          description: A JSON arry of cityes
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/cityDto'
  /item/store/all:
    get:
      summary: Return list of stores names
      operationId: getStores
      responses:
        '200':
          description: A JSON arry of sotre
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/storeDto'
components:
  schemas:
    sortDto:
      type: object
      required:
        - name
        - direction
      properties:
        name:
          type: string
        direction:
          type: string
          enum:
            - ASC
            - DESC
    pageDto:
      type: object
      required:
        - index
        - size
        - sort
      properties:
        index:
          type: integer
          format: int64
        size:
          type: integer
          format: int64
        sort:
          type: array
          items:
            $ref: '#/components/schemas/sortDto'
    itemInsertDto:
      type: object
      properties:
        name:
          type: string
        orginalPrice:
          type: number
        actionPrice:
          type: number
        activeFrom:
          type: string
          format: date
        activeTo:
          type: string
          format: date
        store:
          type: integer
          format: int64
        category:
          type: integer
          format: int64
        image:
          type: string
    itemDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        storeName:
          type: string
        orginalPrice:
          type: number
        actionPrice:
          type: number
        activeFrom:
          type: string
          format: date
        activeTo:
          type: string
          format: date
        discountPrice:
          description: how big is discunt Formula orginalPrice - actionPrice only if orginalPrice is set
          type: number
        discountPercentage:
          description: discuint in percentage Formula 100 - (actionPrice /orginalPrice * 100) only if orginalPrice is set
          type: number
    searchItemDto:
      type: object
      required:
        - categoryIds
        - cityIds
        - storeIds
        - page
      properties:
        name:
          type: string
        categoryIds:
          type: array
          items:
            type: integer
            format: int64
        cityName:
          type: string
        storeIds:
          type: array
          items:
            type: integer
            format: int64
        priceMIn:
          type: number
        priceMax:
          type: number
        feature:
          type: string
          enum:
            - CHEAPEST_TODAY
            - CHEAPEST_FIRST
            - CHEAPEST_LAST
            - GREATER_SAVINGS_FIRST
            - GREATER_SAVINGS_LAST
        page:
          type: object
          $ref: '#/components/schemas/pageDto'
    pageItemDto:
      type: object
      properties:
        size:
          type: integer
          format: int64
          description: Number of all items in db based by search.
        page:
          type: array
          items:
            $ref: '#/components/schemas/itemDto'
          description: First page of all items (how many items in declared size property)
    categoryDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        description:
          type: string
    cityDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
    storeDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
